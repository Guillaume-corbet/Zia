ZIA, Groupes composé de BARBIER Maxime, BERNABEU Simon, CORBET Guillaume, MOREAU Malo, LIMONGI Alexandre, PARAYRE Samuel, VACHIER Damien. 



                                         Protocole de transfert entre Client et Serveur.



1.1 Introduction

Le protocole décrit ci-dessous permet de communiquer des informations entre le serveur et le client. En effet, certains standards ont été utilisé pour une meilleure compréhension et une meilleure facilitée d’utilisation.

Ce protocole ne suit que ce standard pour une simplicité de mise en place et d’utilisation pour l’équipe de développeur.



1.2 Définitions

Client : Programme qui sollicite les services d'un autre programme pour exécuter une tâche.

Serveur : Le programme qui accepte les connexions des différents clients et qui a pour fonction d’assurer la bonne transmission des données entre ces derniers.

Proxy : Dispositif informatique intermédiaire entre les ordinateurs d'un réseau privé et Internet.

Requête : Message échangé entre le client et le serveur et inversement.

Authentification : Processus par lequel un système informatique s'assure de l'identité d'un utilisateur.

Ressource : Partie d'un système informatique pouvant être employée par différents utilisateurs.

En-tête : groupe d'informations de service placé avant un ensemble de données à traiter en bloc pour l'identifier et, éventuellement, définir les traitements ou les cheminements qu'il doit subir.

HTTP : Protocole de communication entre internautes et serveurs du Web, pour la consultation et le transfert de documents de type hypermédia.

URI : Une courte chaîne de caractères identifiant une ressource sur un réseau (par exemple une ressource Web) physique ou abstraite.

Protocole : Ensemble de règles définissant le mode de communication entre deux ordinateurs.

Transmission : Moment durant lequel le client et le serveur s’envoient des informations.


1.3 Fonctionnement global

La communication client/serveur se fait assez simplement. En effet, les clients envoient les données au serveur qui interprète ce qu’il vient de recevoir pour les envoyer aux clients petit à petit. Cela permet de ne pas perdre de paquets durant la transmission.



1.4 Règles de bases

Chaque transmission DOIT OBLIGATOIREMENT être ponctuées de " " entre chaque paramètre.

Chaque transmission DOIT OBLIGATOIREMENT être ponctuées de "\n" pour signifier la fin de transmission.

Le caractère "\n" NE DOIT PAS être utilisé à un autre endroit qu’à la fin d’une transmission.



2.0 La communication

2.1 Communication avec le serveur

Les fonctions suivantes sont dans la partie du serveur.

"100 Continue" Attente de la suite de la requête.

"101 Switching Protocols" Acceptation du changement de protocole.

"200 OK" Requête traitée avec succès. La réponse dépendra de la méthode de requête utilisée.

"201 Created" Requête traitée avec succès et création d’un document.

"202 Accepted" Requête traitée, mais sans garantie de résultat.

"203 Non-Authoritative Information" Information retournée, mais générée par une source non certifiée.

"204 No Content" Requête traitée avec succès mais pas d’information à renvoyer.

"205 Reset Content" Requête traitée avec succès, la page courante peut être effacée.

"206 Partial Content" Une partie seulement de la ressource a été transmise.

"300 Multiple Choices" L’URI demandée se rapporte à plusieurs ressources.

"301 Moved Permanently" Document déplacé de façon permanente.

"302 Found" Document déplacé de façon temporaire.

"303 See Other" La réponse à cette requête est ailleurs.

"304 Not Modified" Document non modifié depuis la dernière requête.

"305 Use Proxy" La requête doit être ré-adressée au proxy.

"307 Temporary Redirect" La requête doit être redirigée temporairement vers l’URI spécifiée.

"400 Bad Request" La syntaxe de la requête est erronée.

"401 Unauthorized" Une authentification est nécessaire pour accéder à la ressource.

"402 Payment Required" Paiement requis pour accéder à la ressource.

"403 Forbidden" Le serveur a compris la requête, mais refuse de l'exécuter. Contrairement à l'erreur 401, s'authentifier ne fera aucune différence. Sur les serveurs où l'authentification est requise, cela signifie généralement que l'authentification a été acceptée mais que les droits d'accès ne permettent pas au client d'accéder à la ressource.

"404 Not Found" Ressource non trouvée.

"405 Method Not Allowed" Méthode de requête non autorisée.

"406 Not Acceptable" La ressource demandée n'est pas disponible dans un format qui respecterait les en-têtes « Accept » de la requête.

"407 Proxy Authentication Required" Accès à la ressource autorisé par identification avec le proxy.

"408 Request Time-out" Temps d’attente d’une requête du client, écoulé côté serveur. D'après les spécifications HTTP : « Le client n'a pas produit de requête dans le délai que le serveur était prêt à attendre. Le client PEUT répéter la demande sans modifications à tout moment ultérieur ».

"409 Conflict" La requête ne peut être traitée en l’état actuel.

"410 Gone" La ressource n'est plus disponible et aucune adresse de redirection n’est connue.

"411 Length Required" La longueur de la requête n’a pas été précisée.

"412 Precondition Failed" Préconditions envoyées par la requête non vérifiées.

"413 Request Entity Too Large" Traitement abandonné dû à une requête trop importante.

"414 Request-URI Too Long" URI trop longue.

"415 Unsupported Media Type" Format de requête non supporté pour une méthode et une ressource données.

"416 Requested range unsatisfiable" Champs d’en-tête de requête « range » incorrect.

"417 Expectation failed	Comportement" attendu et défini dans l’en-tête de la requête insatisfaisante.

"500 Internal Server Error" Erreur interne du serveur.

"501 Not Implemented" Fonctionnalité réclamée non supportée par le serveur.

"502 Bad Gateway" En agissant en tant que serveur proxy ou passerelle, le serveur a reçu une réponse invalide depuis le serveur distant.

"503 Service Unavailable" Service temporairement indisponible ou en maintenance.

"504 Gateway Time-out" Temps d’attente d’une réponse d’un serveur à un serveur intermédiaire écoulé.

"505 HTTP Version not supported" Version HTTP non gérée par le serveur.




2.2 Communication du client

"OPTIONS" Décrit les options de communications avec la ressource visée.

"GET" Transfère une représentation actuelle de la ressource cible.

"HEAD" Identique à GET, mais ne transférez que la ligne d'état et la section d'en-tête.

"POST" Effectue un traitement spécifique à la ressource sur la charge utile de la demande.

"PUT" Remplace toutes les représentations actuelles de la ressource cible par la charge utile de la demande.

"TRACE" Réalise un message de test aller/retour en suivant le chemin de la ressource visée.

"CONNECT" Établit un tunnel vers le serveur identifié par la ressource cible.